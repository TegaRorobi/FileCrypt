# Generated by Django 5.1.3 on 2025-02-02 13:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='team name')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='business name')),
                ('email', models.EmailField(max_length=254, verbose_name='business email')),
                ('manager_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='businesses', to=settings.AUTH_USER_MODEL, verbose_name='manager account')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EncryptedResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_tag', models.CharField(max_length=50, verbose_name='file tag')),
                ('file_content', models.FileField(upload_to='uploads/', verbose_name='file content')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_resources', to=settings.AUTH_USER_MODEL, verbose_name='resource uploader')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EncryptionKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(max_length=100, verbose_name='key value')),
                ('usage_count', models.IntegerField(verbose_name='usage count')),
                ('usage_limit', models.IntegerField(verbose_name='usage limit')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encryption_keys', to=settings.AUTH_USER_MODEL, verbose_name='key owner')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encryption_keys', to='main.encryptedresource', verbose_name='resource')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='organisation name')),
                ('email', models.EmailField(max_length=254, verbose_name='organisation email')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='organisation address')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='main.business', verbose_name='parent business')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organisation_position', models.CharField(blank=True, max_length=100, null=True)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_profiles', to='main.organisation', verbose_name='organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_member_profiles', to=settings.AUTH_USER_MODEL, verbose_name='user account')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceAccess_Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grantor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_resources_organisation', to=settings.AUTH_USER_MODEL, verbose_name='grantor')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_access', to='main.organisation', verbose_name='organisation')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_access', to='main.encryptedresource', verbose_name='resource')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceAccess_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grantee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_access', to=settings.AUTH_USER_MODEL, verbose_name='granted to')),
                ('grantor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_resources', to=settings.AUTH_USER_MODEL, verbose_name='grantor')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_access', to='main.encryptedresource', verbose_name='resource')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceAccess_Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grantor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_resources_team', to=settings.AUTH_USER_MODEL, verbose_name='grantor')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_access', to='main.encryptedresource', verbose_name='resource')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_access', to='main.team', verbose_name='team')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team_position', models.CharField(blank=True, max_length=100, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_profiles', to='main.team', verbose_name='team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_member_profiles', to=settings.AUTH_USER_MODEL, verbose_name='user account')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='workspace name')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspaces', to='main.organisation', verbose_name='organisation')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='team',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='main.workspace', verbose_name='workspace'),
        ),
        migrations.CreateModel(
            name='ResourceAccess_Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grantor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_resources_workspace', to=settings.AUTH_USER_MODEL, verbose_name='grantor')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_access', to='main.encryptedresource', verbose_name='resource')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_access', to='main.workspace', verbose_name='workspace')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkspaceMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('workspace_position', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_member_profiles', to=settings.AUTH_USER_MODEL, verbose_name='user account')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_profiles', to='main.workspace', verbose_name='workspace')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
